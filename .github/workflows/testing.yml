name: Python Testing

on:
  # see https://michaelheap.com/access-secrets-from-forks/
  pull_request_target:

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{  github.event.pull_request.head.sha }} # This is dangerous without the first access check
      - uses: actions/checkout@v4

      - name: install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: install dependencies
        run: poetry install --all-extras

      # run unit tests first without env keys
      # this is to ensure we're not adding unit tests that need to call LLMs
      - name: unit_tests + coverage
        env:
          PORTIA_API_ENDPOINT: "https://api.porita.dev"
        run: |
          set -o pipefail
          poetry run pytest tests/unit

      - name: tests + coverage
        env:
          PORTIA_API_ENDPOINT: "https://api.porita.dev"
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          PORTIA_API_KEY: ${{ secrets.PORTIA_API_KEY }}
        run: |
          set -o pipefail
          poetry run pytest -n 2  --cov --cov-fail-under 100 --log-cli-level=WARNING --junitxml=pytest.xml | tee pytest-coverage.txt

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
